.card {
    display: flex;
    flex-direction: column;
    font-size: 1.6rem;
    position: relative;
    // z-index: -1;


    &--small,
    &--big,
    &--range label {
        // background-color: var(--c-surface-2);
        // box-shadow: 0 0 0 1px hsla(var(--accent-hsl) / 0.2);
        background-color: hsla(var(--accent-hsl) / 0.1);
        border: 1px solid hsla(var(--accent-hsl) / 0.12);
        backdrop-filter: blur(10px) contrast(1.5);
    }


    @include dev('sm') {
        font-size: 1.4rem;
    }

    /* this fix some crazy long width in v4.0.4 */
    input {
        max-width: max-content;
    }

    input,
    select,
    label {
        line-height: 1 !important;
    }

    label,
    label>* {
        cursor: pointer !important;
    }

    input,
    select,
    .card__unitname-wrapper {
        transition: all 0.45s $easeOutBack;
    }

    input,
    select {

        &:focus {
            outline: none !important;
            border: none !important;
        }
    }

    input {
        transform-origin: center center;
    }

    &::after,
    &::before {
        --card-tooltip-gap: 0.5rem;
        position: absolute;
        top: var(--card-tooltip-top);
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        opacity: 0;
        pointer-events: none;
        translate: 0 -0.5rem;
        transition: 0.3s ease-in-out, translate 0.3s $easeOutBack;
    }

    &::after {
        --card-tooltip-top: calc(100% + var(--card-tooltip-gap));
        content: attr(data-gpth-err);
        width: max-content;
        height: clamp(1.5rem, 50%, max-content);
        font-size: .45em;
        font-weight: bold;
        padding: 0.5rem;
        color: var(--c-on-accent);
        border-radius: 50vw;
        background-color: var(--c-accent);
    }

    &::before {
        --border-w: 0.5rem;
        // --card-tooltip-top: calc(100% - var(--card-tooltip-gap) - var(--border-w));
        --card-tooltip-top: calc(100% - var(--card-tooltip-gap) + 0.1rem);
        content: "";
        border-width: var(--border-w);
        border-style: solid;
        border-color: transparent transparent var(--c-accent) transparent;
    }

    &:has(select) {

        &::after,
        &::before {
            display: none;
        }
    }

    &:has(input:focus) {

        &::after,
        &::before {
            opacity: 1 !important;
            translate: 0 0 !important;
        }
    }

    /* Hide arrows in Webkit browsers (Chrome, Safari) */
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Hide arrows in Firefox */
    input[type="number"] {
        -moz-appearance: textfield;
        /* For Firefox */
        appearance: textfield;
    }

    /* Ensure the input field looks consistent across all browsers */
    input[type="number"] {
        -webkit-appearance: none;
        /* For Chrome and Safari */
        -moz-appearance: textfield;
        /* For Firefox */
        appearance: textfield;
    }

    /* _________________   SMALL CARDS   _________________ */

    &--small {
        border-radius: 50vw;
        // z-index: -1;


        label {
            height: 3rem;
            padding: 0.3rem;
        }

        input:is(:focus, :focus-visible, :focus-within) {
            translate: scale(1.2);
            font-size: 1em !important;
        }

        input {
            --tw-ring-color: transparent !important;
            aspect-ratio: 1 / 1;
            height: 100%;
            background-color: hsla(var(--accent-hsl) / 0.2);
            color: var(--c-accent);
            padding: 0 !important;
            text-align: center;
            outline: none !important;
            border: none !important;
        }

        .card__unit {
            --px: 0.25rem;
            background-color: hsla(var(--accent-hsl) / 0.12);
            color: var(--c-accent);
            // font-size: 0.72rem;
            font-size: 0.5em;
            width: max-content;
            line-height: 1;
            padding: 0.1rem var(--px);
            margin-bottom: 0.25rem;
            translate: -0.15rem 0;
        }

        .card__name {
            font-size: 0.42em;
        }

        &:has(input:focus):not(&[type="range"]) {
            .card__unitname-wrapper {
                display: none;
            }

            label {
                display: flex !important;
            }

            input {
                width: 100%;
                transform: unset !important;
                aspect-ratio: unset !important;
            }
        }

        &:hover {
            input {
                transform: scale(1.1);
            }

            .card__unitname-wrapper {
                transform: translatex(3px);
            }
        }
    }


    /* _________________   BIG CARDS   _________________ */
    &--big {
        --p: .9rem;
        border-radius: 1.5rem;
        padding: var(--p);
        z-index: 1;

        @include dev('sm') {
            --p: 0.5rem;
            font-size: 1.4rem;
            border-radius: 1rem;
        }

        .card__icon {
            --icon-size: 1.8rem;
            width: var(--icon-size);
            height: var(--icon-size);
            display: grid;
            place-items: center;
            font-size: 0.5em;
            font-weight: bold;
            margin-bottom: 0.3rem;
            margin-left: -0.05rem;
            border-radius: 8px;
            color: var(--c-accent);
            background-color: hsla(var(--accent-hsl) / 0.15);

            @include dev('sm') {
                --icon-size: 1.5rem;
            }
        }

        .card__name {
            color: var(--c-accent);
            font-size: 0.5em;
            margin-bottom: 0.2rem;
            transition: translate 0.2s ease-in-out;
        }

        select,
        input {
            font-size: 1em;
            position: relative;
            line-height: 1;
            width: 100%;
            height: max-content !important;
            background-color: transparent !important;
            padding: 4px 0px !important;
            border-radius: 50vw;

            &:focus {
                background-color: hsla(var(--accent-hsl) / 0.15) !important;
                color: var(--c-accent);
                padding: 4px 8px !important;
            }
        }

        select {
            background: none;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            border: none !important;

            option {
                font-size: 0.6em !important;
                background-color: var(--c-surface-2) !important;
            }
        }

        &:hover {
            .card__name {
                translate: 0 2px;
            }

            input,
            select {
                color: var(--c-accent);
            }
        }
    }


    /* _________________   RANGE CARDS   _________________ */
    &--range {
        input {
            width: 85% !important;
            margin: 0 auto;
            align-self: flex-end;
        }

        .card__unit {
            --px: 0.5rem;
            background-color: hsla(var(--accent-hsl) / 0.12);
            color: var(--c-accent);
            font-size: 0.5em;
            width: max-content;
            line-height: 1;
            padding: 0.2rem var(--px);
            translate: -0.15rem 0;
        }

        .card__name {
            font-size: 0.42em;
        }

        .card__output {
            --output-size: 2.5rem;
            // width: var(--output-size);
            // height: var(--output-size);
            aspect-ratio: 1 / 1;
            background-color: hsla(var(--accent-hsl) / 0.2);
            color: var(--c-accent);
            font-size: 0.8em;
            line-height: 1;
        }

        .icon-locked {
            display: none;
            position: absolute;
            top: 6%;
            right: 7%;
            width: 1.8rem;
            color: var(--c-accent);
            @extend %animScaleIn;
            z-index: 10;
        }

        &.is-locked {
            @include isLockedIcon;
        }
    }
}