@mixin isLockedIcon {
    position: relative;
    cursor: not-allowed !important;

    label {
        transform: .3s ease;
        pointer-events: none !important;
        opacity: 0.7 !important;

        &::after {
            will-change: backdrop-filter;
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: radial-gradient(circle at 100% 0%, oklch(from var(--c-accent) l c h /0.02) 5%, oklch(from var(--c-accent) l c h / 0.4) 100%);
            z-index: 8;
            border-radius: inherit;
            backdrop-filter: blur(2px);
        }
    }

    &:hover {
        label::after {
            backdrop-filter: blur(0px) !important;
            background-image: radial-gradient(circle at 100% 0%, oklch(from var(--c-accent) l c h / 0.4) 5%, oklch(from var(--c-accent) l c h / 0.02) 42%) !important;
        }
    }

    .icon-locked {
        display: block !important;
        // opacity: 1 !important;
    }
}

@mixin lift {
    transition: translate 0.25s ease;

    &:is(:hover, :focus) {
        translate: 0 -0.08rem;
    }
}

@mixin scaleIn {
    transition: scale 0.25s ease;

    &:is(:hover, :focus) {
        scale: 0.985;
    }
}

@mixin menuBg {
    backdrop-filter: var(--blur-menu) var(--brightness-menu) !important;
    background-color: var(--c-bg-menu) !important;
}

@mixin imgTrans {
    transition: 0.3s $easeInOutCubic scale;

    & img {
        transition: 0.3s $easeInOutCubic scale;
    }

    &:is(:hover, :focus) {
        scale: 0.97;

        img {
            scale: 1.1;
        }
    }
}

// Mixin with defaults for opacity and blur
// @mixin el-status($type, $opacity: 0.11, $blur: 18px) {
//     $color-hsl: var(--#{$type}-hsl);
//     $color: var(--c-#{$type});

//     background-color: hsla(#{$color-hsl} / #{$opacity}) !important;
//     color: #{$color} !important;
//     border: 1px solid hsla(#{$color-hsl} / #{$opacity}) !important;
//     backdrop-filter: blur(#{$blur});
// }

@mixin elStatus($type,
    $opacity: 0.11,
    $blur: 18px,
    $isBorder: true,
    $isBackdrop: true) {
    $colorHsl: var(--#{$type}-hsl);
    $color: var(--c-#{$type});

    background-color: hsla(#{$colorHsl} / #{$opacity}) !important;
    color: #{$color} !important;

    @if $isBorder {
        border: 1px solid hsla(#{$colorHsl} / #{$opacity}) !important;
    }

    @if $isBackdrop {
        backdrop-filter: blur(#{$blur});
    }
}

// @mixin bgcAccent($alpha: 0.1) {
//     --alpha: #{$alpha};
//     background-color: var(--ext-color-alpha) !important;
//     color: var(--c-accent) !important;
// }

// oklch(from var(--c-accent) l c h /